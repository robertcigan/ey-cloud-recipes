#!/bin/bash
#===============================================================================
script_name="passenger_monitor"
script_author="James Paterni, Dennis Bell, Jim Neath"
script_version="0.1.0"
#===============================================================================
# This script monitors passenger application instances and gracefully restarts
#   any monitored instances exceeding the configured (real) memory limit and
#   kills any orphaned instances
#
# * Ensure this script is executable (chmod +x)
#===============================================================================

target_app=$1

# Check user is root.
if [ "`whoami`" != "root" ]; then
  logger -t `basename $0` -s "Must be run as root"
  exit 1
fi

## Default limit - override with -l <limit in MB>
limit=250

shift
while getopts "l:" opt; do
  case $opt in
    l)
      limit=$OPTARG
    ;;
  esac
done

## Get output from passenger-memory-stats, egrep for Rails: OR Rack:.
## Sed explained:
##  /MB/!d; - Do not delete lines with MB in them. All others are removed (check for memory output)
##  s/(^[0-9]+)\s.*(\b[0-9]+)\.[0-9]+\sMB.*MB.*/\1-\2/' ... Explained in segments below...
##      s/ -- Tell sed that this is a search and replace function.
##      ^(^[0-9]+)\s* -- Get the pid (First set of numbers at beginning of string).
##      (\b[0-9]+)\.[0-9]+\sMB\s+ -- Grab the virtual memory for each process. Must begin with a word break (i.e. space), have numbers, a dot, more numbers a space and MB. Only the integer half of the number is grabbed.
##      (\b[0-9]+)\.[0-9]+\sMB -- same thing for the real memory for each process
##      .*\/([^\/]+)\/current -- grab the application name out of the path
##      \1,\2,\3,\4/ -- assembe the selected values into a comma-separated-list, to later be converted into an array

# Create an array variable
declare -a info

for record in `passenger-memory-stats | egrep -i " Ra(ils|ck):" | sed -r '/MB/!d;s/(^[0-9]+)\s*(\b[0-9]+)\.[0-9]\sMB\s+(\b[0-9]+)\.[0-9]+\sMB.*\/([^\/]+)\/current/\1,\2,\3,\4/'`; do

  # Turn the record into an array, and assign to local variables for clarity
  info=(`echo ${record//,/ }`)
  app_pid=${info[0]}
  app_virt=${info[1]} # reserved for future use
  app_real=${info[2]}
  app_name=${info[3]}

  if [[ "$app_name" != "$target_app" ]]; then
    continue
  fi

  ## Check the against the limit, if it exceeds the memory amount, KILL IT.
  if [[ $app_real -gt $limit ]]; then
    kill -USR1 $app_pid
    logger -t passenger_monitor -s "Killing PID $app_pid (app $app_name) - memory $app_real MB exceeds $limit MB"
  fi
done

## Passenger 2 stale passenger.<x> fix:
## Remove stale passenger.<x> directories to prevent
## multiple passenger instance running error.
for each in /tmp/passenger.*;do 
  if [[ -d ${each}/info ]]; then  # This is passenger 2?
    if [[ ! -e ${each}/info/status.socket ]]; then  # Remove stale directories.
      rm -rf ${each}
    fi
  fi
done